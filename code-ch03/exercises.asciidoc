# tag::exercise1[]
==== Exercise 1

Evaluate whether these points are on the curve y^2^=x^3^+7 over F~223~

(192,105), (17,56), (200,119), (1,193), (42,99)
# end::exercise1[]
# tag::exercise2[]
==== Exercise 2

For the curve y^2^=x^3^+7 over F~223~, find:

* (170,142) + (60,139)
* (47,71) + (17,56)
* (143,98) + (76,66)
# end::exercise2[]
# tag::exercise3[]
==== Exercise 3

Extend `ECCTest` to test for the additions from the previous exercise call this `test_add`.
# end::exercise3[]
# tag::exercise4[]
==== Exercise 4

For the curve y^2^=x^3^+7 over F~223~, find:

* 2⋅(192,105)
* 2⋅(143,98)
* 2⋅(47,71)
* 4⋅(47,71)
* 8⋅(47,71)
* 21⋅(47,71)
# end::exercise4[]
# tag::exercise5[]
==== Exercise 5

For the curve y^2^=x^3^+7 over F~223~, find the order of the group generated by (15,86)
# end::exercise5[]
# tag::exercise6[]
==== Exercise 6

Verify whether these signatures are valid:

```
P = (0x887387e452b8eacc4acfde10d9aaf7f6d9a0f975aabb10d006e4da568744d06c, 
     0x61de6d95231cd89026e286df3b6ae4a894a3378e393e93a0f45b666329a0ae34)

# signature 1
z, r, s = 0xec208baa0fc1c19f708a9ca96fdeff3ac3f230bb4a7ba4aede4942ad003c0f60,
          0xac8d1c87e51d0d441be8b3dd5b05c8795b48875dffe00b7ffcfac23010d3a395,
          0x68342ceff8935ededd102dd876ffd6ba72d6a427a3edb13d26eb0781cb423c4

# signature 2
z, r, s = 0x7c076ff316692a3d7eb3c3bb0f8b1488cf72e1afcd929e29307032997a838a3d,
          0xeff69ef2b1bd93a66ed5219add4fb51e11a840f404876325a1e8ffe0529a2c,
          0xc7207fee197d27c618aea621406f6bf5ef6fca38681d82b2f06fddbdce6feab6
```
# end::exercise6[]
# tag::exercise7[]
==== Exercise 7

Sign the following message with the secret

```
e = 12345
z = int.from_bytes(hash256('Programming Bitcoin!'), 'big')
```
# end::exercise7[]
